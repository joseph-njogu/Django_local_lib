# Python CircleCI 2.0 configuration file

#should always start with a version number
version: 2

# jobs refer to a single execution of the build
jobs:
  # build is the name of the job....they can be multiple and unique
  build:
    # builds occur in a docker container
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo

    # series/ list of steps done for the build
    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
      # Step 3: run linter and tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cd locallib
            coverage run --source="." manage.py test
            coverage report 
            coverage html
      #deploying to pypi
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
          #  python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = njogu487" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc      

      - run:
          name: create packages
          command: |
            python3 setup.py sdist bdist_wheel
           # python setup.py sdist

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            pip install twine
            twine upload dist/*


      # - run:
      #     name: executing ansible to a remote server
      #     command: |
      #       . venv/bin/activate
      #       pip install ansible
      #       ansible-playbook -i hosts playbook.yml      
          
    # deploy:
    # working_directory: ~/repo
    # docker:
    #   - image: ansible/ansible:ubuntu1804
    # steps:
    #   # Installation
    #   - run:
    #       name: Install System Packages
    #       command: pip install --upgrade pip && pip install ansible
    #   # # Dependencies
    #   # - checkout
    #   # - restore_cache:
    #   #     key: repo-{{ .Branch }}-{{ checksum "./ansible/requirements.yml" }}-v1
    #   # - run: ansible-galaxy install -r ansible/requirements.yml
    #   # - save_cache:
    #   #     key: mootube-{{ .Branch }}-{{ checksum "./ansible/requirements.yml" }}-v1
    #   #     paths:
    #   #       - '/root/.ansible/roles'
    #   # Deploy
    #   - run: ansible-playbook ansible/deploy.yml -i ansible/hosts.ini --ask-vault-pass


    # workflows:
    #   version: 2
    #   build_test_and_deploy:
    #     jobs:
    #       - build_and_test
    #       - deploy:
    #           requires:
          #             - build_and_test
      version: 2

      
      jobs:
        deploy:
          docker:
            - image: ansible/ansible:ubuntu1804
              environment:
                ANSIBLE_HOST_KEY_CHECKING: no
          working_directory: ~/repo
          steps:
            - checkout
            - attach_workspace:
                at: ~/repo
            - run: cat ~/repo/.circleci/ssh.config >> ~/.ssh/id_rsa
            - run:
                name: Install System Packages
                command: pip install ansible
            # - run: ansible-galaxy install -r .circleci/requirements.yml
            - run: ANSIBLE_FORCE_COLOR=true ansible-playbook -i hosts playbook.yml 
